<xr-scene ar-system="modes:Marker" bind:ready="handleReady">
  <xr-assets bind:loaded="handleAssetsLoaded">
    <block wx:for="{{sceneList}}" wx:for-item="itemPar">
      <block wx:for="{{itemPar}}" wx:key="sceneUuid">
        <block wx:if="{{item.type === 'video'}}">
          <xr-asset-load
            type="video-texture"
            asset-id="{{item.type}}_{{item.sceneUuid}}"
            options="loop:true"
            src="{{item.arResourceUrl}}"
          />
          <xr-asset-material
            wx:if="{{item.videoEffect === 'tsbs'}}"
            asset-id="mat_{{item.sceneUuid}}"
            effect="video-tsbs"
            uniforms="u_baseColorMap:video-video_{{item.sceneUuid}}"
          />
          <xr-asset-material
            wx:else
            asset-id="mat_{{item.sceneUuid}}"
            effect="simple"
            uniforms="u_baseColorMap:video-video_{{item.sceneUuid}}"
          />
        </block>
        <block wx:elif="{{item.type === 'model'}}">
          <xr-asset-load
            type="gltf"
            asset-id="model_{{item.sceneUuid}}"
            src="{{item.arResourceUrl}}"
            options="ignoreError: 10602"
          />
        </block>
      </block>
    </block>
  </xr-assets>

  <xr-light type="ambient" color="1 1 1" intensity="1" />
  <xr-light type="directional" rotation="40 70 0" color="1 1 1" intensity="3" cast-shadow />

  <block
    wx:if="{{assetsLoaded}}"
    wx:for="{{sceneList}}"
  >
    <xr-node>
      <xr-ar-tracker
        data-asset-index="{{ index }}"
        mode="Marker"
        src="{{item[0].sceneImgUrl}}"
        bind:ar-tracker-switch="handleTrackerSwitch"
      >
        <block wx:for="{{item}}" wx:key="sceneUuid" wx:for-item="item2">
          <xr-mesh
            wx:if="{{item2.type === 'video' && item2.videoEffect === 'tsbs'}}"
            node-id="video-cube-{{item2.sceneUuid}}"
            geometry="cube"
            material="mat_{{item2.sceneUuid}}"
            scale="{{item2.xScale}} 0 {{item2.yScale}}"
            position="{{item2.position.x || 0}} {{item2.position.y || 0}} {{item2.position.z || 0}}"
            rotation="{{item2.rotation.x || 0}} {{item2.rotation.y || 0}} {{item2.rotation.z || 0}}"
          />
          <xr-mesh
            wx:elif="{{item2.type === 'video' && item2.videoEffect !== 'tsbs'}}"
            node-id="video-plane-{{item2.sceneUuid}}"
            geometry="plane"
            material="mat_{{item2.sceneUuid}}"
            scale="{{item2.xScale}} 1 {{item2.yScale}}"
            position="{{item2.position.x || 0}} {{item2.position.y || 0}} {{item2.position.z || 0}}"
            rotation="{{item2.rotation.x || 0}} {{item2.rotation.y || 0}} {{item2.rotation.z || 0}}"
          />
          <xr-gltf
            wx:elif="{{item2.type === 'model'}}"
            model="model_{{item2.sceneUuid}}"
            anim-autoplay
            cube-shape="autoFit:true"
            scale="{{item2.scale.x || 1}} {{item2.scale.y || 1}} {{item2.scale.z || 1}}"
            position="{{item2.position.x || 0}} {{item2.position.y || 0}} {{item2.position.z || 0}}"
            rotation="{{item2.rotation.x || 0}} {{item2.rotation.y || 0}} {{item2.rotation.z || 0}}"
          />
        </block>
      </xr-ar-tracker>
    </xr-node>
  </block>
  <xr-camera clear-color="0.4 0.8 0.6 1" background="ar" is-ar-camera />
</xr-scene>